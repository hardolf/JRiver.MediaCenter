; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES:
; http://www.jrsoftware.org/isdl.php

[Setup]
AlwaysShowDirOnReadyPage=yes
;ArchitecturesInstallIn64BitMode=x64
AppName=Lyrics Finder Plugin for JRiver Media Center
AppPublisher=Hardolf
AppPublisherURL=www.hardolf.dk
AppSupportURL=www.hardolf.dk
AppUpdatesURL=www.hardolf.dk
AppVerName=Lyrics Finder Plugin Version 1.0.0.0
Compression=lzma2/max
DefaultDirName={commonpf32}
DefaultGroupName=MediaCenter LyricsFinder
DirExistsWarning=no
DisableDirPage=yes
DisableProgramGroupPage=yes
MinVersion=0,6.1
OutputBaseFilename=Setup
OutputDir=Output
ShowLanguageDialog=no
SolidCompression=yes
UsePreviousAppDir=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "Build\Plugin\*";                            DestDir: "{app}";                 Flags: ignoreversion recursesubdirs createallsubdirs;   Components: plugin
Source: "Build\Standalone\*";                        DestDir: "{app}";                 Flags: ignoreversion recursesubdirs createallsubdirs;   Components:        standalone
Source: "Build\LyricServices\*";                     DestDir: "{app}";                 Flags: ignoreversion recursesubdirs createallsubdirs;   Components: plugin standalone
Source: "Build\LyricServices\MessageInspection.*";   DestDir: "{app}\..\..";           Flags: ignoreversion recursesubdirs createallsubdirs;   Components: plugin standalone
Source: "..\Documentation\Build\*";                  DestDir: "{app}\Documentation";   Flags: ignoreversion recursesubdirs createallsubdirs;   Components: documentation


[Icons]
Name: "{group}\{cm:UninstallProgram, Lyrics Finder plug-in}";      Filename: "{uninstallexe}";              Components: plugin
Name: "{group}\Lyrics Finder for JRiver Media Center";             Filename: "{app}\LyricsFinderExe.exe";   Components:        standalone
Name: "{group}\{cm:UninstallProgram, Lyrics Finder standalone}";   Filename: "{uninstallexe}";              Components:        standalone

[Registry]
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder";                                                                                            Flags: uninsdeletekey;   Components: plugin
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder"; ValueType: dword;  ValueName: "IVersion";   ValueData: "00000001";                         Flags: uninsdeletekey;   Components: plugin
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder"; ValueType: string; ValueName: "Company";    ValueData: "Hardolf";                          Flags: uninsdeletekey;   Components: plugin
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder"; ValueType: string; ValueName: "Version";    ValueData: "1.0.0.0";                          Flags: uninsdeletekey;   Components: plugin
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder"; ValueType: string; ValueName: "URL";        ValueData: "www.hardolf.dk";                   Flags: uninsdeletekey;   Components: plugin
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder"; ValueType: string; ValueName: "Copyright";  ValueData: "Copyright (c) Hardolf 2019";       Flags: uninsdeletekey;   Components: plugin
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder"; ValueType: dword;  ValueName: "PluginMode"; ValueData: "00000001";                         Flags: uninsdeletekey;   Components: plugin
Root: HKLM; Subkey: "SOFTWARE\J. River\Media Center {code:GetMcVersion}\Plugins\Interface\LyricsFinder"; ValueType: string; ValueName: "ProdID";     ValueData: "MediaCenter.LyricsFinder.Plugin";  Flags: uninsdeletekey;   Components: plugin

[Run]
Filename: "{win}\Microsoft.NET\Framework\v4.0.30319\RegAsm.exe"; Parameters: "/codebase   LyricsFinderCore.dll";     WorkingDir: "{app}\"; StatusMsg: "Registering Plugin Core";   Flags:runascurrentuser;   Components: plugin standalone
Filename: "{win}\Microsoft.NET\Framework\v4.0.30319\RegAsm.exe"; Parameters: "/codebase   LyricsFinderPlugin.dll";   WorkingDir: "{app}\"; StatusMsg: "Registering Plugin";        Flags:runascurrentuser;   Components: plugin

[UninstallRun]
Filename: "{win}\Microsoft.NET\Framework\v4.0.30319\RegAsm.exe"; Parameters: "/unregister LyricsFinderCore.dll";     WorkingDir: "{app}\"; StatusMsg: "UnRegistering Plugin Core"; Flags:runascurrentuser;   Components: plugin standalone
Filename: "{win}\Microsoft.NET\Framework\v4.0.30319\RegAsm.exe"; Parameters: "/unregister LyricsFinderPlugin.dll";   WorkingDir: "{app}\"; StatusMsg: "UnRegistering Plugin";      Flags:runascurrentuser;   Components: plugin

[Components]
Name: "plugin";          Description: "LyricsFinder plug-in";               Types: full custom
Name: "standalone";      Description: "LyricsFinder stand-alone program";   Types: full custom
Name: "documentation";   Description: "LyricsFinder documentation";         Types: full custom

[Types]
Name: "full";     Description: "Full installation";
Name: "custom";   Description: "Custom installation";   Flags: iscustom

[code]
const
  RootKey = HKEY_LOCAL_MACHINE;
  RootKeyName = 'HKEY_LOCAL_MACHINE';
  SubFolder = 'Plugins\LyricsFinder';
  MainSubKey = 'SOFTWARE\J. River\Media Core\Installations';
  PathValueName = 'Path';
  SearchKey = 'Media Center';
  SearchKeyVersionPos = 13;
var
  InstallDir: String;
  McInstDirs: TArrayOfString;
  McInstVersions: TArrayOfString;
  McVersion: String;
  McVersionPage: TInputOptionWizardPage;

procedure FindInstalledMcVersions();
var
  AIdx: Integer;
  KIdx: Integer;
  StartPos: Integer;
  Path: String;
  SubKeyName: String;
  SubKeyNames: TArrayOfString;
  Text: String;
  Version: String;
begin
  if RegGetSubkeyNames(RootKey, MainSubKey, SubKeyNames) then begin
    for KIdx := 0 to GetArrayLength(SubKeyNames) - 1 do begin
      SubKeyName := SubKeyNames[KIdx];
      StartPos := Pos(LowerCase(SearchKey), LowerCase(SubKeyName));
      if StartPos > 0 then begin
        Text := Copy(SubKeyName, StartPos, Length(SubKeyName) - StartPos + 1);
        Version := Copy(SubKeyName, StartPos + SearchKeyVersionPos, Length(SubKeyName) - StartPos - SearchKeyVersionPos + 1);
        AIdx := GetArrayLength(McInstDirs);
        SetArrayLength(McInstDirs, AIdx + 1);
        SetArrayLength(McInstVersions, AIdx + 1);

        if RegQueryStringValue(RootKey, MainSubKey + '\' + SubKeyName, PathValueName, Path) then begin
          if Copy(Path, Length(Path), 1) = '\' then Delete(Path, Length(Path), 1);
          McInstDirs[AIdx] := Path;
          McInstVersions[AIdx] := Version;
        end
        else begin
          MsgBox(Format('Installed Media Center path value not found in registry: "%s\%s\%s"', [RootKeyName, MainSubKey + '\' + SubKeyName, PathValueName]), mbError, MB_OK);
          Abort();
        end; 
        // MsgBox(Format('%d : %s : %s : %d : %s : "%s"', [KIdx, Text, Version, AIdx, McInstVersions[AIdx], Path]), mbInformation, MB_OK);
      end;
    end;
  end;
end;

function GetMcVersion(Param: String): String;
begin
  Result := McVersion;
end;

function InitializeSetup(): Boolean;
begin
  McVersion := '24';
  FindInstalledMcVersions();

  if GetArrayLength(McInstDirs) < 1 then begin
    MsgBox('You must install JRiver Media Center before you can install the LyricsFinder plugin.', mbError, MB_OK);
    Abort();
  end
  else begin
    Result := True;
  end;
end;

procedure InitializeWizard();
var
  ALength: Integer;
  Idx: Integer;
begin
  ALength := GetArrayLength(McInstVersions);

  McVersionPage := CreateInputOptionPage(wpSelectComponents,
    'Media Center version', '',
    'Please select your installed JRiver Media Center version that you want the LyricsFinder plugin installed to, then click Next.',
    True, False);

  // Fill the version page
  for Idx := 0 to ALength - 1 do begin
    McVersionPage.Add(Format('%s %s', [SearchKey, McInstVersions[Idx]]));
    if Idx > 0 then McVersionPage.Values[Idx - 1] := False;
    McVersionPage.Values[Idx] := True;
    McVersionPage.SelectedValueIndex := Idx;
  end;
end;

function NextButtonClick(CurPageID: Integer): Boolean;
var
  Idx: Integer;
begin
  // Validate certain pages before allowing the user to proceed
  if CurPageID = McVersionPage.ID then begin
    for Idx := 0 to GetArrayLength(McInstVersions) - 1 do begin
      if McVersionPage.Values[Idx] = True then begin
        McVersion := McInstVersions[Idx];
        InstallDir := Format('%s\%s', [McInstDirs[Idx], SubFolder]);
      end;
    end;

    WizardForm.DirEdit.Text := InstallDir;
    Result := True;
  end else
    Result := True;
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
  // Skip pages that shouldn't be shown
  if (PageID = McVersionPage.ID) then
  begin
    Result := not IsComponentSelected('plugin');
  end;
end;
